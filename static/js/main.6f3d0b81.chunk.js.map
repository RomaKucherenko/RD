{"version":3,"sources":["components/Hoc/withAuthRedirect.js","Redux/dialogsReducer.js","assets/45.gif","components/common/Preloader/Preloader.module.css","components/Profile/Profile.module.css","components/Profile/Header/Header.module.css","components/Profile/Posts/Post/Post.module.css","components/Nav/Nav.module.css","serviceWorker.js","utils/validators/validators.js","components/Nav/Nav.jsx","dalAPI/dalAPI.js","utils/objectHelpers.js","Redux/usersReducer.js","components/Users/User/User.jsx","components/common/Preloader/Preloader.jsx","components/Users/Paginator/Paginator.jsx","components/Users/Users.jsx","Redux/Selectors/usersSelector.js","components/Users/UsersContainer.jsx","Redux/profileReducer.js","components/Profile/Header/Header.jsx","components/Profile/Posts/Post/Post.jsx","components/common/FormControls/FormControls.jsx","components/Profile/Posts/PostForm.js","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileClassComponent.jsx","components/Hoc/withProfileRedirect.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","Redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","Redux/newsReducer.js","components/News/News.jsx","components/News/NewsContainer.jsx","Redux/appReducer.js","components/Test/Test.jsx","Redux/reduxStore.js","components/Hoc/withSuspense.js","App.js","index.js","components/Users/Users.module.css","assets/avatars/RD.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/Posts/Posts.module.css","components/common/FormControls/FormControls.module.css"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","AuthContainer","this","props","to","React","connect","initialState","messages","id","message","path","dialogs","name","addNewMessageCreator","newMessageText","type","dialogsReducer","action","text","newMessage","module","exports","Boolean","window","location","hostname","match","maxLength","Nav","className","s","nav","item","activeClassName","active","href","target","rel","instance","axios","baseURL","withCredentials","headers","usersAPI","pageNubmer","pageSize","get","then","response","data","authAPI","email","password","rememberMe","post","delete","followAPI","unfollow","resultCode","follow","profileAPI","status","put","updateObjInArray","items","objComprasionPropName","actionComprasionPropValue","objNewProp","map","FOLLOW","users","isFetching","totalUsersCount","usersInFollowingProgress","acceptFollow","userId","acceptUnfollow","setUsers","switchFetchingStatus","switchFollowingProgress","isFollowing","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","usersReducer","followed","pageNumber","filter","User","src","avatar","defaultAvatar","onClick","followStatus","disabled","some","description","block","Preloader","preloader","Paginator","useState","Users","pagesCountOnInterface","setPagesCountOnInterface","useEffect","requestUsers","divRef","createRef","onScroll","debounce","event","console","log","innerHeight","outerHeight","scrollY","addEventListener","usersElements","u","photos","small","ref","totalCount","onPagesClick","getIsFetching","usersPage","getUsersInFollowingProgress","getTotalUsersCount","getUsers","createSelector","objAC","bind","UsersCompose","compose","ADD_POST","ADD_LIKE","posts","likesCount","userProfile","newPostText","setStatus","profileReducer","newPost","length","p","postId","Header","alt","Post","key","addLike","requiredField","value","FormControl","Element","input","meta","error","touched","hasError","TextArea","Input","maxLength10","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","Posts","postsElements","profilePage","reverse","NewPost","addPost","postText","PostsList","PostsContainer","addPostCreator","memo","editMode","setEditMode","onBlur","updateStatus","onChange","e","autoFocus","ProfileInfo","Avatar","large","Description","fullName","Profile","ProfileClassComponent","params","myId","setUser","getStatus","WithProfileRedirect","ProfileCompose","withRouter","withProfileRedirect","HeaderImage","loginBlock","login","logout","switchAuthFetchingStatus","setUserDataAction","userData","authAttempt","authReducer","HeaderClassComponent","LoginReduxForm","Error","stopSubmit","_error","formData","news","newsReducer","News","stateNewsElements","n","propsNewsElements","changeState","setState","changeBLL","addNews","prevProps","prevState","snapshot","dispatchObj","NewsCompose","isInitialized","appReducer","Child1","Child2","Test","reducers","combineReducers","dialogsPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","WithSuspense","fallback","DialogsContainer","lazy","App","initializeApp","HeaderContainer","render","withSuspense","ProfileContainer","UsersContainer","NewsContainer","AppCompose","authPromise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6f3d0b81.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst WithAuthRedirect = (Component) => {\r\n    class AuthContainer extends React.Component{\r\n        componentDidMount() {\r\n        }\r\n\r\n        render() {\r\n            // console.log(`this.props:`,this.props)\r\n            // console.log(`Component:`, Component)\r\n            if (!this.props.isAuth) return <Redirect to=\"/Login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(AuthContainer)\r\n}\r\n\r\nexport default WithAuthRedirect","const UPDATE_NEW_MESSAGE_TEXT = `dialogs/UPDATE-NEW-MESSAGE-TEXT`;\r\nconst SEND_MESSAGE = `dialogs/SEND-MESSAGE`;\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi', path: \"./img/avatars/foto_1.jpg\"},\r\n        {id: 2, message: 'Are', path: \"./img/avatars/foto_1.jpg\"},\r\n        {id: 3, message: 'You', path: \"./img/avatars/foto_1.jpg\"},\r\n        {id: 4, message: 'Okay', path: \"./img/avatars/foto_1.jpg\"},\r\n        {id: 5, message: '?', path: \"./img/avatars/foto_1.jpg\"}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Roma', path: \"./img/avatars/foto_1.jpg\"},\r\n        {id: 2, name: 'Dima', path: \"./img/avatars/foto_1.jpg\"},\r\n        {id: 3, name: 'Sasha', path: \"./img/avatars/foto_1.jpg\"},\r\n        {id: 4, name: 'Igor', path: \"./img/avatars/foto_1.jpg\"},\r\n        {id: 5, name: 'Danya', path: \"./img/avatars/foto_1.jpg\"}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    //Reducer только изменяет STATE, вызывать callSubscriber\r\n    //мы не будем, тк это не наша responsibility, наша только в том\r\n    //чтобы изменить STATE. Subscriber должен следить за этим изменением\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let text = action.newMessageText\r\n            let newMessage = {\r\n                id: 6,\r\n                message: text,\r\n                path: \"./img/avatars/foto_1.jpg\"\r\n            }\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addNewMessageCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\r\n\r\n\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/45.7956c94d.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__1cMdv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__13OPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1egX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3jVm9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__U9HL9\",\"item\":\"Nav_item__1pFu7\",\"active\":\"Nav_active__2WxWw\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const requiredField = value => {\r\n    if (value) return undefined\r\n    return \"This field is required\"\r\n}\r\nexport const maxLengthCreator = maxLength => value => {\r\n        //!!!!!Очень интересный момент - проверка на value, undef value or not!!!!!\r\n        //Потому что если будет value = null, то null.length выдаст ошибку\r\n        if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n        return undefined\r\n}","import React from 'react';\r\nimport s from './Nav.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                {/*NavLink - компонента, которая возвращает тег <a>, добавляя ему addEventListener,\r\n                который при клике на него меняет url через historyAPI, а так же устанавливает preventDefault,\r\n                т.е. отменяет типичное для ссылок перенаправление на другую страницу*/}\r\n                <NavLink to=\"/Profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Dialogs\" activeClassName={s.active}>Dialogs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <br/>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/News\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/Test\" activeClassName={s.active}>Test</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href=\"https://www.youtube.com/user/fit4liferu\" target=\"_blank\" rel=\"noopener noreferrer\">Канал моего\r\n                    ментора</a>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"31496dd4-dfd5-4991-a785-9c28daa3f4bc\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    requestUsers(pageNubmer = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${pageNubmer}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\nexport const authAPI = {\r\n    authAttempt() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, {\r\n            email, password, rememberMe\r\n        }).then(response => {\r\n                return response.data\r\n            }\r\n        )\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(response => {\r\n                return response.data\r\n            }\r\n        )\r\n    }\r\n}\r\nexport const followAPI = {\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data.resultCode)\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data.resultCode)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`/profile/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status`, {status})\r\n            .then(response => response.data.resultCode)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`/profile/status/${id}`)\r\n            .then(response => response.data)\r\n    }\r\n}","export const updateObjInArray = (items, objComprasionPropName, actionComprasionPropValue, objNewProp) => {\r\n    return items.map(item => {\r\n        if (item[objComprasionPropName] === actionComprasionPropValue) {\r\n            return {\r\n                ...item,\r\n                ...objNewProp\r\n            }\r\n        }\r\n        return item\r\n    })\r\n}","import {followAPI, usersAPI} from \"../dalAPI/dalAPI\";\r\nimport {updateObjInArray} from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = `users/FOLLOW`\r\nconst UNFOLLOW = `users/UNFOLLOW`\r\nconst SET_USERS = `users/SET_USERS`\r\nconst SET_PAGE_NUMBER = `users/SET_PAGE_NUMBER`\r\nconst SWITCH_FETCHING_STATUS = `users/SWITCH_FETCHING_STATUS`\r\nconst SWITCH_FOLLOWING_PROGRESS = `users/SWITCH_FOLLOWING_PROGRESS`\r\n\r\nlet initialState = {\r\n    users: [],\r\n    isFetching: false,\r\n    totalUsersCount: 0,\r\n    usersInFollowingProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    //Reducer только изменяет STATE, вызывать callSubscriber\r\n    //мы не будем, тк это не наша responsibility, наша только в том\r\n    //чтобы изменить STATE. Subscriber должен следить за этим изменением\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users, 'id', action.userId, {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users, 'id', action.userId, {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users],\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case SET_PAGE_NUMBER:\r\n            return {\r\n                ...state,\r\n                pageNumber: action.pageNumber\r\n            }\r\n        case SWITCH_FETCHING_STATUS:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case SWITCH_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                usersInFollowingProgress:\r\n                    action.isFollowing ? [...state.usersInFollowingProgress, action.userId] :\r\n                        [state.usersInFollowingProgress.filter(id => id != action.userId)]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const acceptFollow = (userId) => ({type: FOLLOW, userId: userId})\r\nexport const acceptUnfollow = (userId) => ({type: UNFOLLOW, userId: userId})\r\nexport const setUsers = (users, totalUsersCount) => ({type: SET_USERS, users, totalUsersCount})\r\nexport const setPageNumber = (pageNumber) => ({type: SET_PAGE_NUMBER, pageNumber})\r\nexport const switchFetchingStatus = (isFetching) => ({type: SWITCH_FETCHING_STATUS, isFetching})\r\nexport const switchFollowingProgress = (isFollowing, userId) => ({type: SWITCH_FOLLOWING_PROGRESS, isFollowing, userId})\r\n\r\nexport const requestUsers = (pageNumber = 1) => {\r\n    return async (dispatch) => {\r\n        dispatch(switchFetchingStatus(true))\r\n\r\n        let data = await usersAPI.requestUsers(pageNumber)\r\n\r\n        dispatch(switchFetchingStatus(false))\r\n        let {items, totalCount} = data\r\n        dispatch(setUsers(items, totalCount))\r\n    }\r\n}\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(switchFollowingProgress(true, userId))\r\n    let resultCode = await apiMethod(userId)\r\n    if (resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n\r\n        dispatch(switchFollowingProgress(false, userId))\r\n    }\r\n\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId,\r\n            followAPI.unfollow.bind(followAPI), acceptUnfollow)\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId,\r\n            followAPI.follow.bind(followAPI), acceptFollow)\r\n\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\n","import React from \"react\";\r\nimport s from \"./../Users.module.css\"\r\nimport defaultAvatar from \"./../../../assets/avatars/RD.jpg\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n    const onChange = () => {\r\n        if (props.followStatus === true) {\r\n            props.unfollow(props.id)\r\n        } else if (props.followStatus === false) {\r\n            props.follow(props.id)\r\n        }\r\n    }\r\n    return <div className={s.User}>\r\n        <div>\r\n            <NavLink to={\"/Profile/\" + props.id}>\r\n                <img src={props.avatar ? props.avatar : defaultAvatar}/>\r\n            </NavLink>\r\n            <button onClick={onChange} id={props.id}\r\n                    disabled={props.usersInFollowingProgress.some(id => id == props.id)}>\r\n                {props.followStatus ? `UNFOLLOW` : `FOLLOW`}\r\n            </button>\r\n        </div>\r\n        <div className={s.description}>\r\n            <div className={s.block}>\r\n                <p>{props.name}</p>\r\n                <p className={s.status}>{props.status}</p>\r\n            </div>\r\n            <div className={s.block}>\r\n                <p>{`props.location.city`},{`props.location.country`}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport preloader from \"../../../assets/45.gif\"\r\nimport s from \"./Preloader.module.css\"\r\n\r\nconst Preloader = (props) => {\r\n    return <div className={s.Preloader}>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\nexport default Preloader","import React, {useState} from \"react\"\r\n\r\nconst Paginator = (props) => {\r\n    let [currentPage, setCurrentPage] = useState(1)\r\n    //const paginatorButtons = generateButtons()\r\n    return <div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport User from \"./User/User\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Paginator from \"./Paginator/Paginator\";\r\nimport { debounce } from \"lodash\"\r\n\r\nconst Users = (props) => {\r\n    let [pagesCountOnInterface, setPagesCountOnInterface] = useState(1)\r\n    useEffect(() => {\r\n        props.requestUsers(pagesCountOnInterface)\r\n    }, [pagesCountOnInterface])\r\n    const divRef = React.createRef()\r\n    const onScroll = debounce((event) => {\r\n        console.log(window.innerHeight, window.outerHeight, window.scrollY)\r\n    }, 150)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", onScroll)\r\n    },[])\r\n\r\n    const scrollUsersRequest = () => {\r\n        setPagesCountOnInterface(pagesCountOnInterface + 1)\r\n    }\r\n\r\n    let usersElements = props.users.map(u => {\r\n        return <User id={u.id} name={u.name} status={u.status} followStatus={u.followed}\r\n                     follow={props.follow} unfollow={props.unfollow} avatar={u.photos.small}\r\n                     switchFollowingProgress={props.switchFollowingProgress}\r\n                     usersInFollowingProgress={props.usersInFollowingProgress}/>\r\n\r\n    })\r\n\r\n\r\n    return <div className={s.Users} ref={divRef} onScroll={onScroll}>\r\n        {props.isFetching ? <Preloader/> : null}\r\n        <Paginator totalCount={props.totalUsersCount} onPagesClick={props.onPagesClick}/>\r\n        {usersElements}\r\n        <button onClick={scrollUsersRequest}>request</button>\r\n    </div>\r\n}\r\n\r\nexport default Users\r\n\r\n","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => state.usersPage.users\r\nexport const getIsFetching = (state) => state.usersPage.isFetching\r\nexport const getUsersInFollowingProgress = (state) => state.usersPage.usersInFollowingProgress\r\nexport const getTotalUsersCount = (state) => state.usersPage.totalUsersCount\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true)\r\n})","import React from \"react\";\r\nimport {follow, requestUsers, switchFetchingStatus, switchFollowingProgress, unfollow} from \"../../Redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport WithAuthRedirect from \"../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getIsFetching,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersInFollowingProgress,\r\n} from \"../../Redux/Selectors/usersSelector\";\r\n\r\n//Этот контейнер нам нужен для общения со Store\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        isFetching: getIsFetching(state),\r\n        usersInFollowingProgress: getUsersInFollowingProgress(state),\r\n        totalUsersCount: getTotalUsersCount(state)\r\n    }\r\n}\r\n//Теперь это наш mapDispatchToProps\r\nlet objAC = {\r\n    follow,\r\n    unfollow,\r\n    requestUsers,\r\n    switchFetchingStatus,\r\n    switchFollowingProgress\r\n}\r\n//Если в connect приходит объект, то он автоматически его методы(cb'и) обёртывает в dispatch\r\n//Раньше было вот так\r\n// let UsersContainer = connect(mapStateToProps, objAC)(WithAuthRedirect(UsersClassComponent))\r\n\r\nlet UsersCompose = compose(\r\n    connect(mapStateToProps, objAC),\r\n    WithAuthRedirect\r\n)(Users)\r\n\r\nexport default UsersCompose","import {profileAPI} from \"../dalAPI/dalAPI\";\r\n\r\nconst ADD_POST = `profile/ADD_POST`;\r\nconst UPDATE_NEW_POST_TEXT = `profile/UPDATE_NEW_POST_TEXT`;\r\nconst ADD_LIKE = `profile/ADD_LIKE`;\r\nconst SET_STATUS = `profile/SET_STATUS`;\r\nconst SET_USER_PROFILE = `profile/SET_USER_PROFILE`;\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Топи, бро\", likesCount: 4},\r\n        {id: 2, message: \"Ты станешь программистом!\", likesCount: 5}\r\n    ],\r\n    userProfile: null, //мы взяли null, чтобы потом if'ом проверить (в ProfileInfo.jsx)\r\n    newPostText: \"\",\r\n    status: \"\"\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    //Reducer только изменяет STATE, вызывать callSubscriber\r\n    //мы не будем, тк это не наша responsibility, наша только в том\r\n    //чтобы изменить STATE. Subscriber должен следить за этим изменением\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.posts.length + 1,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: {...action.userProfile}\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case ADD_LIKE: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => {\r\n                        if (p.id === action.postId) {\r\n                            return {\r\n                                ...p,\r\n                                likesCount: p.likesCount + 1\r\n                            }\r\n                        }\r\n                        return p\r\n                    }\r\n                )\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const addLikeCreator = (postId) => ({type: ADD_LIKE, postId})\r\nexport const setUserProfile = (userProfile) => ({type: SET_USER_PROFILE, userProfile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const setUser = (userId) =>\r\n    async (dispatch) => {\r\n        let data = await profileAPI.getProfile(userId)\r\n        dispatch(setUserProfile(data))\r\n    }\r\nexport const updateStatus = (status) =>\r\n    //Можно сделать логику, которая будет смотреть а стоит ли postit' статус, изменился ли он\r\n    async (dispatch) => {\r\n        let resultCode = await profileAPI.updateStatus(status)\r\n        if (resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    }\r\nexport const getStatus = (userId) =>\r\n    async (dispatch) => {\r\n        let data = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(data))\r\n    }\r\n\r\nexport default profileReducer","import React from 'react'\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={s.Header}>\r\n            <img src=\"img/HeaderRD.png\" alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    const onLike = () => {\r\n        props.addLike(props.id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.item} key={props.key}>\r\n            <img src=\"https://litera.net.pl/wp-content/uploads/2020/07/10-najlepszych-scen-z-serialu-Wiedzmin_article.jpg\"/>\r\n            {props.message}\r\n            <div>\r\n                <button onClick={onLike}>Like</button>\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post","import React from \"react\";\r\nimport s from \"./FormControls.module.css\"\r\n\r\nconst FormControl = Element => ({input, meta:{error, touched}, ...props}) => {\r\n    let hasError = error && touched\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {  hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = FormControl(\"textarea\")\r\nexport const Input = FormControl(\"input\")\r\n// const Element_1213 = Element => ({ input, meta, ...props }) => {\r\n//     const hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={ s.formControl + \" \" + (hasError ? s.error : \"\") }>\r\n//             <Element {...input} {...props} />\r\n//             { hasError && <span> { meta.error } </span> }\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n//\r\n// const Textarea = Element(\"textarea\");\r\n\r\n// <Field component={Textarea} .../>","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(100)\r\n\r\nconst postForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={TextArea}\r\n                    placeholder=\"Введите текст вашего поста\"\r\n                    name=\"postText\"\r\n                    validate={[requiredField, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n}\r\n\r\nconst PostReduxForm = reduxForm({\r\n    form:\"post\"\r\n})(postForm)\r\n\r\n\r\nexport default PostReduxForm","import React from 'react'\r\nimport s from './Posts.module.css'\r\nimport Post from './Post/Post'\r\nimport PostReduxForm from \"./PostForm\";\r\n\r\n\r\nconst Posts = props => {\r\n    let postsElements = [...props.profilePage.posts]\r\n        .reverse()\r\n        .map(\r\n        post => <Post key={post.id} id={post.id} message={post.message} likesCount={post.likesCount}\r\n                      addLike={props.addLike}/>\r\n    )\r\n\r\n    let addPost = (data) => {\r\n       props.addPost(data.postText)\r\n    }\r\n    return (\r\n        <div className={s.Posts}>\r\n            <h3>Posts</h3>\r\n            <div className={s.NewPost}>\r\n                <PostReduxForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className={s.PostsList}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts","import React from 'react'\r\nimport {addLikeCreator, addPostCreator} from \"../../../Redux/profileReducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//Задача контейнерной компоненты удовлетворить нужны презентационной(Posts.jsx)\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText))\r\n        },\r\n        addLike: (id) => {\r\n            dispatch(addLikeCreator(id))\r\n        }\r\n    }\r\n}\r\n\r\nlet PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n//Мы удалили rerenderEntireTree() потому что connect возвращает компоненту, которая имеет свой локальный\r\n//subcribe.\r\n// Это удобно, тк она сама решает нужно ли ей перерисовываться или нет и перерисовывается\r\n// ТОЛЬКО ОНА, А НЕ ВСЁ ДЕРЕВО\r\n\r\nexport default PostsContainer","import React, {useEffect, useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    const [count, setCount] = useState(0);\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    return <div>\r\n        {editMode ?\r\n            <input onBlur={deactivateEditMode} value={status}\r\n                   onChange={onChange} autoFocus={true}/>\r\n            :\r\n            <span onClick={activateEditMode}>\r\n                {status ? status : \"````\"}\r\n            </span>\r\n        }\r\n    </div>\r\n\r\n}\r\n//Обёртываем её для того чтобы производился lifeCycleMethod sCU\r\nexport default React.memo(ProfileStatus)","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport defaultAvatar from \"../../../assets/avatars/RD.jpg\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={s.ProfileInfo}>\r\n            <div className={s.Avatar}>\r\n                <img src={props.userProfile.photos.large ?\r\n                    props.userProfile.photos.large : defaultAvatar}/>\r\n            </div>\r\n            <div className={s.Description}>\r\n                <div>{props.userProfile.fullName}</div>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                {/*<ProfileStatusClassComponent status={props.status} updateStatus={props.updateStatus}/>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport Header from './Header/Header';\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {updateStatus} from \"../../Redux/profileReducer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.Profile}>\r\n            <Header/>\r\n            <ProfileInfo userProfile={props.userProfile} status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <PostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\n\r\n//При переходе на URL мы единажды создаём объект класса\r\n//Функциональную компоненту мы бы вызывали каждый раз\r\nclass ProfileClassComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) userId = this.props.myId\r\n        this.props.setUser(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>\r\n    }\r\n}\r\n\r\nexport default ProfileClassComponent","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst WithProfileRedirect = (Component) => {\r\n    return (props) => {\r\n            if(!props.match.params.userId) {\r\n                return <Redirect to={`/Profile/${props.myId}`}/>\r\n            }\r\n        return <Component {...props}/>\r\n    }\r\n}\r\n\r\nexport default WithProfileRedirect","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, setUser, updateStatus} from \"../../Redux/profileReducer\";\r\nimport ProfileClassComponent from \"./ProfileClassComponent\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport withProfileRedirect from \"../Hoc/withProfileRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userProfile: state.profilePage.userProfile,\r\n        myId: state.auth.userId,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\nlet objAC = {\r\n    setUser,\r\n    updateStatus,\r\n    getStatus\r\n}\r\n//WithAuthRedirect - мы оборачиваем нашу классовую компоненту\r\n//Раньше было вот так\r\n// let WithRouterProfileClassComponent = withRouter(WithAuthRedirect(ProfileClassComponent))\r\n//\r\n// let ProfileContainer = connect(mapStateToProps, objAC)(WithRouterProfileClassComponent)\r\n\r\nlet ProfileCompose = compose(\r\n    connect(mapStateToProps, objAC),\r\n    withRouter,\r\n    withProfileRedirect\r\n)(ProfileClassComponent)\r\n\r\nexport default ProfileCompose","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport HeaderImage from \"../../assets/avatars/RD.jpg\"\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.Header}>\r\n            <NavLink to=\"\">\r\n                <img src={HeaderImage} alt=\"\"/>\r\n            </NavLink>\r\n            <div className={s.loginBlock}>\r\n                {props.isFetching ? <Preloader/> :\r\n                    props.isAuth ?\r\n                        <div>\r\n                            {props.login}\r\n                            <button onClick={props.logout}>LogOut</button>\r\n                        </div>\r\n                        : <NavLink to=\"/Login\">Login</NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import {authAPI} from \"../dalAPI/dalAPI\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SWITCH_AUTH_FETCHING_STATUS = `auth/WITCH_AUTH_FETCHING_STATUS`\r\nconst SET_USER_DATA = `auth/SET_USER_DATA`\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    //Reducer только изменяет STATE, вызывать callSubscriber\r\n    //мы не будем, тк это не наша responsibility, наша только в том\r\n    //чтобы изменить STATE. Subscriber должен следить за этим изменением\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.userData,\r\n                isAuth: action.isAuth\r\n            }\r\n        case SWITCH_AUTH_FETCHING_STATUS:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const switchAuthFetchingStatus = (isFetching) => ({type: SWITCH_AUTH_FETCHING_STATUS, isFetching})\r\nexport const setUserDataAction = (userId, login, isAuth) => ({type: SET_USER_DATA, userData: {userId, login}, isAuth})\r\n\r\nexport const authAttempt = () => async (dispatch) => {\r\n    //async возвращает promise\r\n    let data = await authAPI.authAttempt()\r\n    if (data.resultCode === 0) {\r\n        let {id, login} = data.data\r\n        dispatch(setUserDataAction(id, login, true))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    dispatch(switchAuthFetchingStatus(true))\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.resultCode === 0) {\r\n        dispatch(authAttempt())\r\n    } else {\r\n        dispatch(stopSubmit('login', {_error: response.messages[0]}))\r\n    }\r\n    dispatch(switchAuthFetchingStatus(false))\r\n\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    dispatch(switchAuthFetchingStatus(true))\r\n    let response = await authAPI.logout()\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUserDataAction(null, null, false))\r\n    }\r\n    dispatch(switchAuthFetchingStatus(false))\r\n\r\n}\r\nexport default authReducer\r\n","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../Redux/authReducer\";\r\n\r\n\r\nclass HeaderClassComponent extends React.Component {\r\n    render() {\r\n        return <Header{...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.auth\r\n    }\r\n}\r\nlet objAC = {\r\n    logout\r\n}\r\nexport default connect(mapStateToProps, objAC)(HeaderClassComponent)","import {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormControls/FormControls\";\r\nimport {requiredField} from \"../../utils/validators/validators\";\r\nimport s from \"../common/FormControls/FormControls.module.css\";\r\nimport React from \"react\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field component={Input}\r\n                   name={\"email\"}\r\n                   placeholder={\"Login\"}\r\n                   validate={[requiredField]}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input}\r\n                   type={\"password\"}\r\n                   validate={[requiredField]}\r\n                   name={\"password\"}\r\n                   placeholder={\"Password\"}/>\r\n        </div>\r\n        <div>\r\n            <label>\r\n                <Field component={\"input\"} type={\"checkbox\"} name={\"rememberMe\"}/>Запомни меня\r\n            </label>\r\n        </div>\r\n        { error ? <span className={s.Error}>{error}</span> : null}\r\n        <div>\r\n            <button>Войти в IT</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: \"login\"\r\n})(LoginForm)\r\n\r\nexport default LoginReduxForm","import React from \"react\";\r\nimport {login} from \"../../Redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport LoginReduxForm from \"./LoginForm\";\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        let {email, password, rememberMe} = {...formData}\r\n        props.login(email, password, rememberMe)\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\nexport default connect(null, {login})(Login)","const ADD_NEWS = \"news/ADD_NEWS\"\r\n\r\nlet initialState = {\r\n    news: [\"Road To The Dream\", \"Okay\"]\r\n}\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n    //Reducer только изменяет STATE, вызывать callSubscriber\r\n    //мы не будем, тк это не наша responsibility, наша только в том\r\n    //чтобы изменить STATE. Subscriber должен следить за этим изменением\r\n    switch (action.type) {\r\n        case ADD_NEWS:\r\n            return {\r\n                ...state,\r\n                news: [...state.news, action.news ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addNews = (news) => ({type: ADD_NEWS, news})\r\n\r\nexport default newsReducer\r\n","import React from \"react\";\r\n\r\nclass News extends React.Component {\r\n    state = {\r\n        stateNewsElements: this.props.news.map(n => <span>{n}</span>)\r\n    }\r\n    propsNewsElements = this.props.news.map(n => <span>{n}</span>)\r\n    changeState = () => {\r\n        this.setState({\r\n            stateNewsElements: [...this.state.stateNewsElements, \"changeLocalState\"]\r\n        })\r\n    }\r\n    changeBLL = () => {\r\n        this.props.addNews(\"ChangeBll\")\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props != prevProps){\r\n            this.setState({\r\n                stateNewsElements: this.props.news.map(n => <span>{n}</span>)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            State:\r\n            {this.state.stateNewsElements}\r\n            <br/>\r\n            Props:\r\n            {this.propsNewsElements}\r\n            <div>\r\n                <button onClick={this.changeBLL}>Change BLL</button>\r\n                <button onClick={this.changeState}>Change LocalState</button>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default News\r\n","import React from \"react\";\r\nimport {addNews} from \"../../Redux/newsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport News from \"./News\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        news: [...state.news.news]\r\n    }\r\n}\r\nlet dispatchObj = {\r\n    addNews\r\n}\r\nlet NewsCompose = compose(\r\n    connect(mapStateToProps, dispatchObj)\r\n)(News)\r\n\r\n\r\nexport default NewsCompose\r\n","import {authAttempt} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = `app/INITIALIZED_SUCCESS`\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    //Reducer только изменяет STATE, вызывать callSubscriber\r\n    //мы не будем, тк это не наша responsibility, наша только в том\r\n    //чтобы изменить STATE. Subscriber должен следить за этим изменением\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const initializeSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    //Мне нужно узнать когда выполнится ауторизация\r\n    //Из-за того что от authAttempt мне нужно получить\r\n    //promise, то я обязан вызвать dispatch\r\n    //Dispatch возвращает то же что и Thunk'a\r\n    let authPromise = dispatch(authAttempt())\r\n    //Используем .all, тк наша инициализация может состоять из таких процессов как\r\n    // выбор языка сайта\r\n    Promise.all([authPromise]).then(\r\n        dispatch(initializeSuccess())\r\n    )\r\n}\r\n\r\n\r\nexport default appReducer\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst Test = (props) => {\r\n    return (\r\n        <Child1>\r\n            <Child2/>\r\n        </Child1>\r\n    )\r\n}\r\n\r\nconst Child1 = (props) => {\r\n    debugger\r\n    return <div>\r\n        1\r\n    </div>\r\n}\r\n\r\nconst Child2 = (props) => {\r\n    return <div>\r\n        <div>{props.name}</div>\r\n    </div>\r\n}\r\n\r\nexport default Test","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport newsReducer from \"./newsReducer\";\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    news: newsReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst WithSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\nexport default WithSuspense","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Nav from './components/Nav/Nav';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport NewsContainer from \"./components/News/NewsContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./Redux/appReducer\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport Test from \"./components/Test/Test\";\r\nimport store from \"./Redux/reduxStore\";\r\nimport withSuspense from \"./components/Hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n\r\n// Возвращает JSX разметку - Функциональная Компонента\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        //Что я хочу?\r\n        //При переходе на rd.сom приложение isAuth ? rd.сom/News : rd.сom/Login\r\n\r\n        //+- пофиксил, но сейчас в ЛЮБОМ СЛУЧАЕ присутствует мерцание, потому что Login подгружается\r\n        //ВСЕГДА\r\n\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuth) {\r\n            if (!this.props.isInitialized) {\r\n                return <Preloader/>\r\n            }\r\n            return (\r\n                <div className=\"app-wrapper\">\r\n                    <HeaderContainer/>\r\n                    <Nav/>\r\n                    <div className=\"app-wrapper-content\">\r\n                        <Route path=\"/Dialogs\" render={withSuspense(DialogsContainer)}/>\r\n                        <Route path=\"/Profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                        {/*Вопросик означает что этот параметр необязательный\r\n                т.е., Route отрисует Profile, если userId не передан*/}\r\n                        <Route path=\"/Users\" render={() => <UsersContainer/>}/>\r\n                        <Route path=\"/News\" render={() => <NewsContainer/>}/>\r\n                        <Route path=\"/Login\" render={() => <Login/>}/>\r\n                        <Route path=\"/Test\" render={() => <Test/>}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return <Login/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInitialized: state.app.isInitialized,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst AppCompose = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App)\r\n\r\nconst MainApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppCompose/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default MainApp;\r\n\r\n","import * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport MainApp from \"./App\";\r\n\r\n\r\n\r\n//Document Object Model, сокращённо DOM – объектная модель документа,\r\n// которая представляет все содержимое страницы в виде объектов,\r\n// которые можно менять.\r\nReactDOM.render(<MainApp/>,document.getElementById('root'))\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__2sxHv\",\"User\":\"Users_User__NOo2U\",\"description\":\"Users_description__1e-MY\",\"status\":\"Users_status__2uFRi\"};","module.exports = __webpack_public_path__ + \"static/media/RD.5ad0ef7e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__TVfRz\",\"Avatar\":\"ProfileInfo_Avatar__3fL2i\",\"Description\":\"ProfileInfo_Description__2lc1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__UpwHq\",\"loginBlock\":\"Header_loginBlock__1RpPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__1SlSL\",\"NewPost\":\"Posts_NewPost__UNKvd\",\"PostsList\":\"Posts_PostsList__KdH58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"FormControls_Error__1KaeO\"};"],"sourceRoot":""}